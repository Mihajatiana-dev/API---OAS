openapi: 3.0.3
info:
  title: STD23104 - TD4
  version: "1.0.7"
servers:
  - url: https://localhost.std23104.com
paths:
  /meals:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Meal"
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateMeal"
        required: true
      responses:
        200:
          description: List of created meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Meal"
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Meal"
        required: true
      responses:
        200:
          description: List of updated meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Meal"
    delete:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MealIdentifier"
        required: true
      responses:
        200:
          description: List of deleted meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Meal"
  /customers/{customerId}/orders:
    get:
      summary: Get all orders for a specific customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of orders for the specified customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      summary: Create a new order for a specific customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrder"
        required: true
      responses:
        200:
          description: Created order for the customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    put:
      summary: Update an existing order for a specific customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        200:
          description: Updated order for the customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
components:
  schemas:
    Meal:
      allOf:
        - $ref: "#/components/schemas/MealIdentifier"
        - $ref: "#/components/schemas/CreateMeal"
    MealIdentifier:
      type: object
      properties:
        id:
          type: string
    CreateMeal:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: float
    Customer:
      allOf:
        - $ref: "#/components/schemas/CustomerBase"
    CustomerBase:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
      required:
        - id
        - name
        - age
    CreateOrder:
      type: object
      properties:
        reference:
          type: string
        meals:
          type: array
          items:
            $ref: "#/components/schemas/OrderMeal"
    Order:
      allOf:
        - $ref: "#/components/schemas/CreateOrder"
        - type: object
          properties:
            orderDatetime:
              type: string
              format: date-time
    OrderMeal:
      type: object
      properties:
        mealId:
          type: string
        quantity:
          type: integer
